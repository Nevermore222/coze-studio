# Coze Studio Windows Docker 环境配置文件
# 基于官方.env.example文件针对Windows环境进行优化

# ===========================================
# 服务器基础配置
# ===========================================
export LISTEN_ADDR=":8888"
export LOG_LEVEL="debug"
export MAX_REQUEST_BODY_SIZE=1073741824
export SERVER_HOST="http://localhost${LISTEN_ADDR}"
export USE_SSL="0"
export SSL_CERT_FILE=""
export SSL_KEY_FILE=""
# 设置为0.0.0.0:8888以启用远程访问（注意安全风险）
export WEB_LISTEN_ADDR="127.0.0.1:8888"

# ===========================================
# MySQL 数据库配置
# ===========================================
export MYSQL_ROOT_PASSWORD=root
export MYSQL_DATABASE=opencoze
export MYSQL_USER=coze
export MYSQL_PASSWORD=coze123
export MYSQL_HOST=mysql
export MYSQL_PORT=3306
export MYSQL_DSN="${MYSQL_USER}:${MYSQL_PASSWORD}@tcp(${MYSQL_HOST}:${MYSQL_PORT})/${MYSQL_DATABASE}?charset=utf8mb4&parseTime=True"
export ATLAS_URL="mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}?charset=utf8mb4&parseTime=True"

# ===========================================
# Redis 缓存配置
# ===========================================
export REDIS_AOF_ENABLED=no
export REDIS_IO_THREADS=4
export ALLOW_EMPTY_PASSWORD=yes
export REDIS_ADDR="redis:6379"
export REDIS_PASSWORD=""

# ===========================================
# 文件上传组件配置
# ===========================================
# 支持的类型：storage（推荐）/ imagex
export FILE_UPLOAD_COMPONENT_TYPE="storage"

# 火山引擎ImageX配置（可选）
export VE_IMAGEX_AK=""
export VE_IMAGEX_SK=""
export VE_IMAGEX_SERVER_ID=""
export VE_IMAGEX_DOMAIN=""
export VE_IMAGEX_TEMPLATE=""
export VE_IMAGEX_UPLOAD_HOST="https://imagex.volcengineapi.com"

# ===========================================
# 存储配置（MinIO）
# ===========================================
export STORAGE_TYPE="minio"
export STORAGE_UPLOAD_HTTP_SCHEME="http"
export STORAGE_BUCKET="opencoze"

# MinIO配置
export MINIO_ROOT_USER=minioadmin
export MINIO_ROOT_PASSWORD=minioadmin123
export MINIO_DEFAULT_BUCKETS=milvus
export MINIO_AK=$MINIO_ROOT_USER
export MINIO_SK=$MINIO_ROOT_PASSWORD
export MINIO_ENDPOINT="minio:9000"
export MINIO_API_HOST="http://${MINIO_ENDPOINT}"

# TOS配置（可选，火山引擎对象存储）
export TOS_ACCESS_KEY=
export TOS_SECRET_KEY=
export TOS_ENDPOINT=https://tos-cn-beijing.volces.com
export TOS_BUCKET_ENDPOINT=https://opencoze.tos-cn-beijing.volces.com
export TOS_REGION=cn-beijing

# S3配置（可选，AWS S3兼容存储）
export S3_ACCESS_KEY=
export S3_SECRET_KEY=
export S3_ENDPOINT=
export S3_BUCKET_ENDPOINT=
export S3_REGION=

# ===========================================
# Elasticsearch 搜索引擎配置
# ===========================================
export ES_ADDR="http://elasticsearch:9200"
export ES_VERSION="v8"
export ES_USERNAME=""
export ES_PASSWORD=""
export ES_NUMBER_OF_SHARDS="1"
export ES_NUMBER_OF_REPLICAS="1"

# ===========================================
# 消息队列配置
# ===========================================
export COZE_MQ_TYPE="nsq"
export MQ_NAME_SERVER="nsqd:4150"

# RocketMQ配置（可选）
export RMQ_ACCESS_KEY=""
export RMQ_SECRET_KEY=""

# Pulsar配置（可选）
export PULSAR_SERVICE_URL="pulsar://pulsar-service:6650"
export PULSAR_JWT_TOKEN=""

# ===========================================
# 向量数据库配置
# ===========================================
export VECTOR_STORE_TYPE="milvus"

# Milvus配置
export MILVUS_ADDR="milvus:19530"
export MILVUS_USER=""
export MILVUS_PASSWORD=""
export MILVUS_TOKEN=""

# VikingDB配置（可选，火山引擎向量数据库）
export VIKING_DB_HOST=""
export VIKING_DB_REGION=""
export VIKING_DB_AK=""
export VIKING_DB_SK=""
export VIKING_DB_SCHEME=""
export VIKING_DB_MODEL_NAME=""

# OceanBase配置（可选）
export OCEANBASE_HOST="127.0.0.1"
export OCEANBASE_PORT=2881
export OCEANBASE_USER="root@test"
export OCEANBASE_PASSWORD="coze123"
export OCEANBASE_DATABASE="test"

# ===========================================
# 嵌入模型配置
# ===========================================
export EMBEDDING_TYPE="ark"
export EMBEDDING_MAX_BATCH_SIZE=100

# 火山引擎方舟嵌入模型配置（推荐）
export ARK_EMBEDDING_BASE_URL=""
export ARK_EMBEDDING_MODEL=""
export ARK_EMBEDDING_API_KEY=""
export ARK_EMBEDDING_DIMS="2048"
export ARK_EMBEDDING_API_TYPE=""

# OpenAI嵌入模型配置
export OPENAI_EMBEDDING_BASE_URL=""
export OPENAI_EMBEDDING_MODEL=""
export OPENAI_EMBEDDING_API_KEY=""
export OPENAI_EMBEDDING_BY_AZURE=false
export OPENAI_EMBEDDING_API_VERSION=""
export OPENAI_EMBEDDING_DIMS=1024
export OPENAI_EMBEDDING_REQUEST_DIMS=1024

# Ollama嵌入模型配置（本地部署）
export OLLAMA_EMBEDDING_BASE_URL=""
export OLLAMA_EMBEDDING_MODEL=""
export OLLAMA_EMBEDDING_DIMS=""

# Gemini嵌入模型配置
export GEMINI_EMBEDDING_BASE_URL=""
export GEMINI_EMBEDDING_MODEL="gemini-embedding-001"
export GEMINI_EMBEDDING_API_KEY=""
export GEMINI_EMBEDDING_DIMS=2048
export GEMINI_EMBEDDING_BACKEND="1"
export GEMINI_EMBEDDING_PROJECT=""
export GEMINI_EMBEDDING_LOCATION=""

# HTTP嵌入模型配置（自定义API）
export HTTP_EMBEDDING_ADDR=""
export HTTP_EMBEDDING_DIMS=1024

# ===========================================
# 重排序配置
# ===========================================
export RERANK_TYPE=""

# VikingDB重排序配置
export VIKINGDB_RERANK_HOST=""
export VIKINGDB_RERANK_REGION=""
export VIKINGDB_RERANK_AK=""
export VIKINGDB_RERANK_SK=""
export VIKINGDB_RERANK_MODEL=""

# ===========================================
# OCR配置
# ===========================================
export OCR_TYPE="ve"

# 火山引擎OCR配置
export VE_OCR_AK=""
export VE_OCR_SK=""

# PaddleOCR配置
export PADDLEOCR_OCR_API_URL=""

# ===========================================
# 文档解析器配置
# ===========================================
export PARSER_TYPE="builtin"
export PADDLEOCR_STRUCTURE_API_URL=""

# ===========================================
# 大语言模型配置
# ===========================================
# 主模型配置（用于智能体和工作流）
export MODEL_PROTOCOL_0="ark"
export MODEL_OPENCOZE_ID_0="100001"
export MODEL_NAME_0=""
export MODEL_ID_0=""
export MODEL_API_KEY_0=""
export MODEL_BASE_URL_0=""

# 内置功能模型配置
export BUILTIN_CM_TYPE="ark"

# OpenAI模型配置
export BUILTIN_CM_OPENAI_BASE_URL=""
export BUILTIN_CM_OPENAI_API_KEY=""
export BUILTIN_CM_OPENAI_BY_AZURE=false
export BUILTIN_CM_OPENAI_MODEL=""

# 火山引擎方舟模型配置
export BUILTIN_CM_ARK_API_KEY=""
export BUILTIN_CM_ARK_MODEL=""
export BUILTIN_CM_ARK_BASE_URL=""

# DeepSeek模型配置
export BUILTIN_CM_DEEPSEEK_BASE_URL=""
export BUILTIN_CM_DEEPSEEK_API_KEY=""
export BUILTIN_CM_DEEPSEEK_MODEL=""

# Ollama模型配置
export BUILTIN_CM_OLLAMA_BASE_URL=""
export BUILTIN_CM_OLLAMA_MODEL=""

# 千问模型配置
export BUILTIN_CM_QWEN_BASE_URL=""
export BUILTIN_CM_QWEN_API_KEY=""
export BUILTIN_CM_QWEN_MODEL=""

# Gemini模型配置
export BUILTIN_CM_GEMINI_BACKEND=""
export BUILTIN_CM_GEMINI_API_KEY=""
export BUILTIN_CM_GEMINI_PROJECT=""
export BUILTIN_CM_GEMINI_LOCATION=""
export BUILTIN_CM_GEMINI_BASE_URL=""
export BUILTIN_CM_GEMINI_MODEL=""

# ===========================================
# 工作流代码执行器配置
# ===========================================
export CODE_RUNNER_TYPE="local"
export CODE_RUNNER_ALLOW_ENV=""
export CODE_RUNNER_ALLOW_READ=""
export CODE_RUNNER_ALLOW_WRITE=""
export CODE_RUNNER_ALLOW_RUN=""
export CODE_RUNNER_ALLOW_NET="cdn.jsdelivr.net"
export CODE_RUNNER_ALLOW_FFI=""
export CODE_RUNNER_NODE_MODULES_DIR=""
export CODE_RUNNER_TIMEOUT_SECONDS=""
export CODE_RUNNER_MEMORY_LIMIT_MB=""

# ===========================================
# 用户注册控制
# ===========================================
export DISABLE_USER_REGISTRATION=""
export ALLOW_REGISTRATION_EMAIL=""

# ===========================================
# 插件安全配置
# ===========================================
export PLUGIN_AES_AUTH_SECRET='^*6x3hdu2nc%-p38'
export PLUGIN_AES_STATE_SECRET='osj^kfhsd*(z!sno'
export PLUGIN_AES_OAUTH_TOKEN_SECRET='cn+$PJ(HhJ[5d*z9'

# ===========================================
# Windows 特定优化配置
# ===========================================
# 确保在Windows环境下正常工作的额外配置项
export COMPOSE_CONVERT_WINDOWS_PATHS=1
export COMPOSE_FORCE_WINDOWS_HOST=1